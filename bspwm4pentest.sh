#!/bin/bash

#Colours
greenColour="\e[0;32m\033[1m"
endColour="\033[0m\e[0m"
redColour="\e[0;31m\033[1m"
blueColour="\e[0;34m\033[1m"
yellowColour="\e[0;33m\033[1m"
purpleColour="\e[0;35m\033[1m"
turquoiseColour="\e[0;36m\033[1m"
grayColour="\e[0;37m\033[1m"


paso1() {


    # Instalar algunas dependencias y programas

    sudo apt update 2> /dev/null 1>&2

    echo -e "\n${redColour} [!] ${endColour}${blueColour}Instalando algunas dependencias y programas${endColour}"

    sudo apt install build-essential git vim xcb libxcb-util0-dev libxcb-ewmh-dev libxcb-randr0-dev libxcb-icccm4-dev libxcb-keysyms1-dev libxcb-xinerama0-dev libasound2-dev libxcb-xtest0-dev libxcb-shape0-dev -y 2> /dev/null 1>&2

    sudo apt install cmake cmake-data pkg-config python3-sphinx libcairo2-dev libxcb1-dev libxcb-util0-dev libxcb-randr0-dev libxcb-composite0-dev python3-xcbgen xcb-proto libxcb-image0-dev libxcb-ewmh-dev libxcb-icccm4-dev libxcb-xkb-dev libxcb-xrm-dev libxcb-cursor-dev libasound2-dev libpulse-dev libjsoncpp-dev libmpdclient-dev libcurl4-openssl-dev libnl-genl-3-dev -y 2> /dev/null 1>&2

    sudo apt install meson libxext-dev libxcb1-dev libxcb-damage0-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-render-util0-dev libxcb-render0-dev libxcb-randr0-dev libxcb-composite0-dev libxcb-image0-dev libxcb-present-dev libxcb-xinerama0-dev libpixman-1-dev libdbus-1-dev libconfig-dev libgl1-mesa-dev libpcre2-dev libevdev-dev uthash-dev libev-dev libx11-xcb-dev libxcb-glx0-dev -y 2> /dev/null 1>&2

    sudo apt install gnome-terminal -y 2> /dev/null 1>&2

    sudo apt install caja -y 2> /dev/null 1>&2

    sudo apt install wmname -y 2> /dev/null 1>&2

    sudo apt install rofi -y 2> /dev/null 1>&2

    sudo apt install xclip -y 2> /dev/null 1>&2


    # Instalar bspwm y sxhkd

    echo -e "${redColour} [!] ${endColour}${blueColour}Instalando bspwm y sxhdk${endColour}"

    pushd /home/$(whoami)/Descargas/ 2> /dev/null 1>&2 || pushd /home/$(whoami)/Downloads 2> /dev/null 1>&2

    git clone https://github.com/baskerville/bspwm.git 2> /dev/null 1>&2

    git clone https://github.com/baskerville/sxhkd.git 2> /dev/null 1>&2

    cd bspwm/ 2> /dev/null 1>&2

    make 2> /dev/null 1>&2

    sudo make install 2> /dev/null 1>&2

    cd ../sxhkd/ 2> /dev/null 1>&2

    make 2> /dev/null 1>&2

    sudo make install 2> /dev/null 1>&2

    sudo apt install bspwm -y 2> /dev/null 1>&2


    # Cargamos archivos de configuracion de bspwm y sxhkd

    echo -e "${redColour} [!] ${endColour}${blueColour}Cargando archivos de configuración de bspwm y sxhkd${endColour}"

    mkdir ~/.config/bspwm 2> /dev/null 1>&2

    mkdir ~/.config/sxhkd 2> /dev/null 1>&2

    popd 2> /dev/null 1>&2

    cp files/bspwmrc ~/.config/bspwm/ 2> /dev/null 1>&2

    chmod +x ~/.config/bspwm/bspwmrc 2> /dev/null 1>&2

    cp files/sxhkdrc ~/.config/sxhkd/ 2> /dev/null 1>&2


    # Creamos el archivo bspwm_resize

    echo -e "${redColour} [!] ${endColour}${blueColour}Creando archivo bspwm_resize${endColour}"

    mkdir ~/.config/bspwm/scripts/ 2> /dev/null 1>&2

    cp files/bspwm_resize ~/.config/bspwm/scripts/bspwm_resize 2> /dev/null 1>&2  ; chmod +x ~/.config/bspwm/scripts/bspwm_resize 2> /dev/null 1>&2


    # Instalamos la polybar

    echo -e "${redColour} [!] ${endColour}${blueColour}Instalando polybar${endColour}"

    pushd /home/$(whoami)/Descargas/ 2> /dev/null 1>&2 || pushd /home/$(whoami)/Downloads/ 2> /dev/null 1>&2

    git clone --recursive https://github.com/polybar/polybar 2> /dev/null 1>&2

    cd polybar/ 2> /dev/null 1>&2

    mkdir build 2> /dev/null 1>&2

    cd build/ 2> /dev/null 1>&2

    cmake .. 2> /dev/null 1>&2

    make -j$(nproc) 2> /dev/null 1>&2

    sudo make install 2> /dev/null 1>&2

    popd 2> /dev/null 1>&2


    # Instalamos Picom y ajustamos las transparencias

    echo -e "${redColour} [!] ${endColour}${blueColour}Instalando picom y ajustando transparencias${endColour}"

    pushd /home/$(whoami)/Descargas/ 2> /dev/null 1>&2 || pushd /home/$(whoami)/Downloads/ 2> /dev/null 1>&2

    git clone https://github.com/ibhagwan/picom.git 2> /dev/null 1>&2

    cd picom/ 2> /dev/null 1>&2

    git submodule update --init --recursive 2> /dev/null 1>&2

    meson --buildtype=release . build 2> /dev/null 1>&2

    ninja -C build 2> /dev/null 1>&2

    sudo ninja -C build install 2> /dev/null 1>&2

    popd 2> /dev/null 1>&2

    mkdir ~/.config/picom 2> /dev/null 1>&2

    cp files/picom.conf ~/.config/picom/picom.conf 2> /dev/null 1>&2


    # Instalamos las Hack Nerd Fonts

    pushd /usr/local/share/fonts/ 2> /dev/null 1>&2

    sudo wget https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Hack.zip -O Hack.zip 2> /dev/null 1>&2

    echo -e "${redColour} [!] ${endColour}${blueColour}Instalando Hack Nerd Fonts${endColour}"

    sudo rm Hack*.ttf 2> /dev/null 1>&2

    sudo unzip Hack.zip 2> /dev/null 1>&2

    sudo rm Hack.zip 2> /dev/null 1>&2

    sudo fc-cache -v 2> /dev/null 1>&2

    popd 2> /dev/null 1>&2


    # Cerrar sesion

    echo -e "\n${redColour} [!] Se va a cerrar la sesion en 10 segundos, vuelve a iniciar con el entorno de bspwm [!]${endColour}"
    sleep 10
    kill -9 -1

}


paso2(){

    sudo apt update 2> /dev/null 1>&2


    # Establecer Hack Nerd Fonts en la terminal

    echo
    echo -e "\n${blueColour}En el paso 1 se han instalado las Hack Nerd Fonts, haz ${endColour}${yellowColour}'click derecho en la terminal > preferencias'${endColour}${blueColour} ó ${endColour}${yellowColour}'archivo > preferencias'${endColour}${blueColour} para cambiar la fuente, pulsa [enter] para seguir...${endColour}"
    read -p ""


    # Instalamos firejail y ultima version de firefox

    echo -e "${redColour} [!] ${endColour}${blueColour}Instalando firejail y firefox${endColour}"

    sudo apt install firejail -y 2> /dev/null 1>&2

    pushd /opt/ 2> /dev/null 1>&2

    sudo wget 'https://download.mozilla.org/?product=firefox-latest-ssl&os=linux64&lang=es-ES' -O firefox.tar.bz2 2> /dev/null 1>&2

    sudo tar -xf firefox.tar.bz2 2> /dev/null 1>&2

    sudo rm firefox.tar.bz2 2> /dev/null 1>&2

    popd 2> /dev/null 1>&2


    # Instalamos feh para poder definir el fondo de pantalla y creamos la carpeta donde se almacenará el fondo

    echo -e "${redColour} [!] ${endColour}${blueColour}Instalando feh${endColour}"

    sudo apt install feh -y 2> /dev/null 1>&2

    mkdir /home/$(whoami)/.wallpapers 2> /dev/null 1>&2

    cp files/fondo.jpg /home/$(whoami)/.wallpapers/fondo.jpg 2> /dev/null 1>&2


    # Descargamos y configuramos el tema de la polybar

    echo -e "${redColour} [!] ${endColour}${blueColour}Descargando y configurando tema de la polybar${endColour}"

    pushd /home/$(whoami)/Descargas/ 2> /dev/null 1>&2 || pushd /home/$(whoami)/Downloads/ 2> /dev/null 1>&2

    git clone https://github.com/VaughnValle/blue-sky.git 2> /dev/null 1>&2

    mkdir ~/.config/polybar 2> /dev/null 1>&2

    cd ~/Descargas/blue-sky/polybar/ 2> /dev/null 1>&2  || cd ~/Downloads/blue-sky/polybar/ 2> /dev/null 1>&2

    cp * -r ~/.config/polybar 2> /dev/null 1>&2

    cd fonts 2> /dev/null 1>&2

    sudo cp * /usr/share/fonts/truetype/ 2> /dev/null 1>&2

    fc-cache -v 2> /dev/null 1>&2

    popd 2> /dev/null 1>&2

    cp files/current.ini ~/.config/polybar/current.ini 2> /dev/null 1>&2

    cp files/workspace.ini ~/.config/polybar/workspace.ini 2> /dev/null 1>&2

    cp files/launch.sh ~/.config/polybar/launch.sh 2> /dev/null 1>&2

    chmod +x ~/.config/polybar/launch.sh ~/.config/polybar/workspace.ini ~/.config/polybar/current.ini 2> /dev/null 1>&2


    # Añadimos scripts para la polybar

    echo -e "${redColour} [!] ${endColour}${blueColour}Añadiendo scripts personalizados a la polybar${endColour}"

    mkdir ~/.config/bin 2> /dev/null 1>&2

    cp files/ethernet_status.sh ~/.config/bin/ethernet_status.sh 2> /dev/null 1>&2

    chmod +x ~/.config/bin/ethernet_status.sh 2> /dev/null 1>&2

    cp files/hackthebox_status.sh ~/.config/bin/hackthebox_status.sh 2> /dev/null 1>&2

    chmod +x ~/.config/bin/hackthebox_status.sh 2> /dev/null 1>&2

    cp files/target_status.sh ~/.config/bin/target_status.sh 2> /dev/null 1>&2

    chmod +x ~/.config/bin/target_status.sh 2> /dev/null 1>&2

    cp files/copy_ethernet.sh ~/.config/bin/copy_ethernet.sh 2> /dev/null 1>&2

    chmod +x ~/.config/bin/copy_ethernet.sh 2> /dev/null 1>&2

    cp files/copy_vpn.sh ~/.config/bin/copy_vpn.sh 2> /dev/null 1>&2

    chmod +x ~/.config/bin/copy_vpn.sh 2> /dev/null 1>&2

    cp files/copy_target.sh ~/.config/bin/copy_target.sh 2> /dev/null 1>&2

    chmod +x ~/.config/bin/copy_target.sh 2> /dev/null 1>&2

    touch ~/.config/bin/target 2> /dev/null 1>&2


    # Configuramos el tema Nord de Rofi

    echo -e "${redColour} [!] ${endColour}${blueColour}Configurando tema Nord de rofi${endColour}"

    mkdir -p ~/.config/rofi/themes 2> /dev/null 1>&2

    cp ~/Descargas/blue-sky/nord.rasi ~/.config/rofi/themes 2> /dev/null 1>&2 || cp ~/Downloads/blue-sky/nord.rasi ~/.config/rofi/themes 2> /dev/null 1>&2

    echo -e "${redColour} [!] ${endColour}${blueColour}Se acaba de instalar el tema 'Nord', pulsa [enter] para seleccionar y [alt+a] para confirmar el tema${endColour}"

    sleep 3

    rofi-theme-selector 2> /dev/null 1>&2


    # Arreglar pequeño problema de archivos inseguros de zsh y crear link simbolico de zshrc

    echo -e "${redColour} [!] ${endColour}${blueColour}Creando link simbólico de la zshrc${endColour}"

    pushd /usr/local/share/zsh 2> /dev/null 1>&2

    sudo chmod -R 755 ./site-functions 2> /dev/null 1>&2

    sudo chown -R root:root ./site-functions 2> /dev/null 1>&2

    popd 2> /dev/null 1>&2

    sudo ln -s -f ~/.zshrc /root/.zshrc 2> /dev/null 1>&2


    # Instalamos la powerlevel10k en la zsh para el usuario normal

    echo -e "${redColour} [!] ${endColour}${blueColour}Instalando powerlevel10k para el usuario $(whoami) ${endColour}"

    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/.config/powerlevel10k 2> /dev/null 1>&2

    usermod --shell '/usr/bin/zsh' $(whoami) 2> /dev/null 1>&2


    # Instalamos oh my tmux

    echo -e "${redColour} [!] ${endColour}${blueColour}Instalando oh my tmux ${endColour}"

    pushd ~ 2> /dev/null 1>&2

    git clone 'https://github.com/gpakosz/.tmux.git' 2> /dev/null 1>&2

    ln -s -f .tmux/.tmux.conf 2> /dev/null 1>&2

    cp .tmux/.tmux.conf.local . 2> /dev/null 1>&2

    popd 2> /dev/null 1>&2


    # Instalamos bat, lsd y fzf

    echo -e "${redColour} [!] ${endColour}${blueColour}Instalando bat, lsd y fzf ${endColour}"

    wget 'https://github.com/sharkdp/bat/releases/download/v0.18.3/bat_0.18.3_amd64.deb' 2> /dev/null 1>&2

    sudo dpkg -i bat_0.18.3_amd64.deb 2> /dev/null 1>&2

    rm bat_0.18.3_amd64.deb 2> /dev/null 1>&2

    wget 'https://github.com/Peltoche/lsd/releases/download/0.20.1/lsd_0.20.1_amd64.deb' 2> /dev/null 1>&2

    sudo dpkg -i lsd_0.20.1_amd64.deb 2> /dev/null 1>&2

    rm lsd_0.20.1_amd64.deb 2> /dev/null 1>&2

    git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf 2> /dev/null 1>&2

    echo

    ~/.fzf/install


    # Cerrar sesion

    echo -e "\n${redColour} [!] Se va a cerrar la sesion en 10 segundos para aplicar los cambios, vuelve ahora a iniciar sesion [!]${endColour}"
    sleep 10
    kill -9 -1

}




paso3(){


    if [[ $EUID -ne 0 ]]; then
        echo -e "\n${redColour}[!] Debes ejecutar este paso como el usuario root${endColour}" 
        exit 1
    fi


    # Instalamos la powerlevel10k en la zsh para el usuario root y prevenimos posibles errores

    echo -e "\n${redColour} [!] ${endColour}${blueColour}Instalando powerlevel10k para el usuario root ${endColour}"

    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/.config/powerlevel10k 2> /dev/null 1>&2

    usermod --shell '/usr/bin/zsh' $(whoami) 2> /dev/null 1>&2

    chown $SUDO_USER:$SUDO_USER /root 2> /dev/null 1>&2
    chown $SUDO_USER:$SUDO_USER /root/.cache -R 2> /dev/null 1>&2
    chown $SUDO_USER:$SUDO_USER /root/.local -R 2> /dev/null 1>&2


    # Creamos la carpeta de plugins de zsh e instalamos el plugin sudo

    echo -e "${redColour} [!] ${endColour}${blueColour}Instalando plugin sudo ${endColour}"

    mkdir /usr/share/zsh-plugins 2> /dev/null 1>&2

    pushd /usr/share/ 2> /dev/null 1>&2

    chown $SUDO_USER:$SUDO_USER zsh-plugins 2> /dev/null 1>&2

    cd zsh-plugins 2> /dev/null 1>&2

    wget 'https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/plugins/sudo/sudo.plugin.zsh' 2> /dev/null 1>&2

    chown $SUDO_USER:$SUDO_USER sudo.plugin.zsh 2> /dev/null 1>&2

    popd 2> /dev/null 1>&2


    # Instalamos oh my tmux para el usuario root

    echo -e "${redColour} [!] ${endColour}${blueColour}Instalando oh my tmux para el usuario root ${endColour}"

    pushd ~ 2> /dev/null 1>&2

    git clone 'https://github.com/gpakosz/.tmux.git' 2> /dev/null 1>&2

    ln -s -f .tmux/.tmux.conf 2> /dev/null 1>&2

    cp .tmux/.tmux.conf.local . 2> /dev/null 1>&2

    popd 2> /dev/null 1>&2


    # Copiamos la zshrc
    
    echo -e "${redColour} [!] ${endColour}${blueColour}Copiando zshrc personalizada ${endColour}"

    cp files/.zshrc /home/$SUDO_USER/.zshrc 2> /dev/null 1>&2
    chown $SUDO_USER:$SUDO_USER /home/$SUDO_USER/.zshrc 2> /dev/null 1>&2 || chown kali:kali /home/$SUDO_USER/.zshrc 2> /dev/null 1>&2


    # Instalamos fzf para el usuario root

    echo -e "${redColour} [!] ${endColour}${blueColour}Instalando fzf para el usuario root ${endColour}"

    git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf 2> /dev/null 1>&2
    ~/.fzf/install


    # Recomendacion Reiniciar

    echo -e "\n${redColour} [!] La instalación del entorno casi ha finalizado, se debe reiniciar el sistema antes del paso 4${endColour}"

}

paso4(){

    if [[ $EUID -ne 0 ]]; then
        echo -e "\n${redColour}[!] Debes ejecutar este paso como el usuario root${endColour}" 
        exit 1
    fi

    # Personalizamos la powerlevel10k para el usuario normal

    echo 'typeset -g POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(dir status command_execution_time context)' >> /home/$SUDO_USER/.p10k.zsh

    echo 'typeset -g POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=()' >> /home/$SUDO_USER/.p10k.zsh

    # Personalizamos la powerlevel10k para el usuario root


    echo 'typeset -g POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(dir status command_execution_time context)' >> /root/.p10k.zsh

    echo 'typeset -g POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=()' >> /root/.p10k.zsh

    echo 'typeset -g POWERLEVEL9K_CONTEXT_ROOT_TEMPLATE=''' >> /root/.p10k.zsh


    # Recomendacion Reiniciar

    echo -e "\n${redColour} [!] La instalación del entorno ha finalizado, abre y cierra la terminal para completarla${endColour}"

}


helpPanel() {
    echo -e "${blueColour}\nArgumentos:\n\n\t-s <paso>\n\n\tEjemplo: ./bspwm4pentest -s 1${endColour}"
    
    echo -e "${blueColour}\n\nPasos:\n${endColour}"
    echo -e "${blueColour} ${endColour}"
    echo -e "${blueColour}\t--> 1. Instalar dependencias + bspwm + polybar + picom ${endColour}${yellowColour} <-- Hacer como el usuario normal ${endColour}"
    echo -e "${blueColour}\n\t--> 2. Instalar Hack Nerd Fonts + firefox + feh + tema polybar + tema rofi + powerlevel10k + ohmytmux + bat,lsd y fzf ${endColour}${yellowColour}<-- Hacer como el usuario normal ${endColour}"
    echo -e "${blueColour}\n\t--> 3. Instalar powerlevel10k + plugins zsh + ohmytmux + fzf ${endColour}${redColour} <-- Hacer como el usuario root ${endColour}"
    echo -e "${blueColour}\n\t--> 4. Personalizamos la powerlevel10k ${endColour}${redColour} <-- Hacer como el usuario root ${endColour}"

    echo -e "${blueColour}\n\nGuia:  ${endColour}"
    echo -e "${blueColour}\n\tPrimero ejecutamos el paso 1. Cuando acabe, se cerrará sesión y habrá que entrar con la bspwm.${endColour}"
    echo -e "${blueColour}\n\tPosteriormente, una vez hemos iniciado con el entorno de bspwm, ya podemos ejecutar los siguientes pasos en orden.${endColour}"
    echo -e "${blueColour}\n\tDespués de todo, se recomienda un reinicio.${endColour}"
    echo

    

}



if [ -z $1  ] || [ $# -gt 2  ]
then
    helpPanel
    exit 0
fi

while getopts "s:h" opt
do
    case $opt in
        s ) paso$OPTARG
          ;;
        h ) helpPanel
          ;;
    esac
done

